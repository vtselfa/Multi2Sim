!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CORRUPT_RANGE	mhandle.c	30;"	d	file:
CORRUPT_TOTAL	mhandle.c	31;"	d	file:
END_MARK	mhandle.c	28;"	d	file:
HT_INITIAL_SIZE	mhandle.c	25;"	d	file:
MHANDLE_AT	mhandle.h	28;"	d
MHANDLE_H	mhandle.h	21;"	d
MHANDLE_STRINGIFY	mhandle.h	26;"	d
MHANDLE_TOSTRING	mhandle.h	27;"	d
START_MARK	mhandle.c	29;"	d	file:
__mhandle_check	mhandle.c	/^void __mhandle_check(char *at)$/;"	f
__mhandle_done	mhandle.c	/^void __mhandle_done()$/;"	f
__mhandle_used_memory	mhandle.c	/^unsigned long __mhandle_used_memory()$/;"	f
active	mhandle.c	/^	int active : 1;$/;"	m	struct:item_t	file:
at	mhandle.c	/^	char *at;$/;"	m	struct:item_t	file:
calloc	mhandle.h	35;"	d
check_corruption	mhandle.c	/^static void check_corruption(void *ptr, unsigned long size, char *at)$/;"	f	file:
free	mhandle.h	33;"	d
ht	mhandle.c	/^static struct item_t *ht;		\/* linear hash table *\/$/;"	v	typeref:struct:item_t	file:
ht_count	mhandle.c	/^static int ht_size = 0, ht_count = 0;	\/* size & elements in the hash table *\/$/;"	v	file:
ht_grow	mhandle.c	/^static void ht_grow()$/;"	f	file:
ht_insert	mhandle.c	/^static void ht_insert(void *ptr, unsigned long size, char *at)$/;"	f	file:
ht_remove	mhandle.c	/^static unsigned long ht_remove(void *ptr, char *at)$/;"	f	file:
ht_size	mhandle.c	/^static int ht_size = 0, ht_count = 0;	\/* size & elements in the hash table *\/$/;"	v	file:
initialize	mhandle.c	/^static void initialize()$/;"	f	file:
initialized	mhandle.c	/^static int initialized = 0;$/;"	v	file:
item_t	mhandle.c	/^struct item_t {$/;"	s	file:
malloc	mhandle.h	34;"	d
mark_corruption	mhandle.c	/^static void mark_corruption(void *ptr, unsigned long size)$/;"	f	file:
mem_busy	mhandle.c	/^static unsigned long mem_busy = 0;$/;"	v	file:
mhandle_calloc	mhandle.c	/^void *mhandle_calloc(unsigned long nmemb, unsigned long size, char *at)$/;"	f
mhandle_check	mhandle.h	38;"	d
mhandle_check	mhandle.h	44;"	d
mhandle_done	mhandle.h	39;"	d
mhandle_done	mhandle.h	45;"	d
mhandle_free	mhandle.c	/^void mhandle_free(void *ptr, char *at)$/;"	f
mhandle_malloc	mhandle.c	/^void *mhandle_malloc(unsigned long size, char *at)$/;"	f
mhandle_realloc	mhandle.c	/^void *mhandle_realloc(void *ptr, unsigned long size, char *at)$/;"	f
mhandle_strdup	mhandle.c	/^char *mhandle_strdup(const char *s, char *at)$/;"	f
mhandle_used_memory	mhandle.h	40;"	d
mhandle_used_memory	mhandle.h	46;"	d
outofmem	mhandle.c	/^static void outofmem(char *at)$/;"	f	file:
ptr	mhandle.c	/^	void *ptr;$/;"	m	struct:item_t	file:
realloc	mhandle.h	36;"	d
removed	mhandle.c	/^	int removed : 1;$/;"	m	struct:item_t	file:
size	mhandle.c	/^	unsigned long size;$/;"	m	struct:item_t	file:
strdup	mhandle.h	32;"	d
strdup	mhandle.h	37;"	d
