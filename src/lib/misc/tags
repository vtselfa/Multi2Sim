!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BITMAP_CLEAR	misc.h	104;"	d
BITMAP_CLEAR_RANGE	misc.h	113;"	d
BITMAP_GET	misc.h	108;"	d
BITMAP_INIT	misc.h	99;"	d
BITMAP_SET	misc.h	102;"	d
BITMAP_SET_RANGE	misc.h	110;"	d
BITMAP_SET_VAL	misc.h	106;"	d
BITMAP_TYPE	misc.h	97;"	d
BITS32	misc.h	82;"	d
BITS64	misc.h	83;"	d
BOOL	misc.h	45;"	d
CLEARBIT32	misc.h	90;"	d
CLEARBIT64	misc.h	91;"	d
DOUBLE_LINKED_LIST_FOR_EACH	misc.h	172;"	d
DOUBLE_LINKED_LIST_INSERT_HEAD	misc.h	130;"	d
DOUBLE_LINKED_LIST_INSERT_TAIL	misc.h	142;"	d
DOUBLE_LINKED_LIST_MEMBER	misc.h	154;"	d
DOUBLE_LINKED_LIST_REMOVE	misc.h	157;"	d
DWORD_ALIGN	misc.h	53;"	d
GETBIT32	misc.h	86;"	d
GETBIT64	misc.h	87;"	d
HALF_ALIGN	misc.h	55;"	d
IN_RANGE	misc.h	46;"	d
M2S_HOST_GUEST_MATCH	misc.h	310;"	d
MAX	misc.h	41;"	d
MAX_LONG_STRING_SIZE	misc.h	32;"	d
MAX_PATH_SIZE	misc.h	34;"	d
MAX_STRING_SIZE	misc.h	33;"	d
MIN	misc.h	38;"	d
MISC_H	misc.h	21;"	d
MOD	misc.h	58;"	d
PACKAGE_DATA_DIR	misc.c	838;"	d	file:
PTR_ASSIGN	misc.h	177;"	d
ROUND_DOWN	misc.h	50;"	d
ROUND_UP	misc.h	49;"	d
SETBIT32	misc.h	88;"	d
SETBIT64	misc.h	89;"	d
SETBITVALUE32	misc.h	92;"	d
SETBITVALUE64	misc.h	93;"	d
SEXT32	misc.h	78;"	d
SEXT64	misc.h	79;"	d
SWAPDW	misc.h	67;"	d
SWAPH	misc.h	61;"	d
SWAPW	misc.h	63;"	d
WORD_ALIGN	misc.h	54;"	d
bit_map_copy	misc.c	/^void bit_map_copy(struct bit_map_t *dst, unsigned int dst_where,$/;"	f
bit_map_count_ones	misc.c	/^int bit_map_count_ones(struct bit_map_t *bit_map, unsigned int where, unsigned int size)$/;"	f
bit_map_create	misc.c	/^struct bit_map_t *bit_map_create(unsigned int size)$/;"	f
bit_map_dump	misc.c	/^void bit_map_dump(struct bit_map_t *bit_map, unsigned int where, unsigned int size, FILE *f)$/;"	f
bit_map_free	misc.c	/^void bit_map_free(struct bit_map_t *bit_map)$/;"	f
bit_map_get	misc.c	/^unsigned int bit_map_get(struct bit_map_t *bit_map, unsigned int where, unsigned int size)$/;"	f
bit_map_set	misc.c	/^void bit_map_set(struct bit_map_t *bit_map, unsigned int where, unsigned int size,$/;"	f
bit_map_t	misc.c	/^struct bit_map_t$/;"	s	file:
can_open_read	misc.c	/^int can_open_read(char *fname)$/;"	f
can_open_write	misc.c	/^int can_open_write(char *fname)$/;"	f
close_file	misc.c	/^void close_file(FILE *f)$/;"	f
count	misc.h	/^	int count;$/;"	m	struct:string_map_t
create_temp_file	misc.c	/^FILE *create_temp_file(char *ret_path, int ret_path_size)$/;"	f
data	misc.c	/^	unsigned int data[0];$/;"	m	struct:bit_map_t	file:
dump_bin	misc.c	/^void dump_bin(int x, int digits, FILE *f)$/;"	f
dump_ptr	misc.c	/^void dump_ptr(void *ptr, int size, FILE *stream)$/;"	f
err_m2s_host_guest_match	misc.c	/^static char *err_m2s_host_guest_match =$/;"	v	file:
free_buffer	misc.c	/^void free_buffer(void *buf)$/;"	f
log_base2	misc.c	/^int log_base2(int x)$/;"	f
m2s_dist_file	misc.c	/^void m2s_dist_file(char *file_name, char *dist_path, char *non_dist_path,$/;"	f
m2s_host_guest_match_error	misc.c	/^void m2s_host_guest_match_error(char *expr, int host_value, int guest_value)$/;"	f
map	misc.h	/^	} map[];$/;"	m	struct:string_map_t	typeref:struct:string_map_t::__anon1
map_flags	misc.c	/^void map_flags(struct string_map_t *map, int flags, char *out, int size)$/;"	f
map_string	misc.c	/^int map_string(struct string_map_t *map, char *string)$/;"	f
map_string_case	misc.c	/^int map_string_case(struct string_map_t *map, char *s)$/;"	f
map_value	misc.c	/^char *map_value(struct string_map_t *map, int value)$/;"	f
map_value_string	misc.c	/^void map_value_string(struct string_map_t *map, int value, char *buf, int size)$/;"	f
memoryleft	misc.c	/^static int memoryleft;$/;"	v	file:
open_read	misc.c	/^FILE *open_read(char *fname)$/;"	f
open_write	misc.c	/^FILE *open_write(char *fname)$/;"	f
read_buffer	misc.c	/^void *read_buffer(char *file_name, int *psize)$/;"	f
read_line	misc.c	/^int read_line(FILE *f, char *line, int size)$/;"	f
size	misc.c	/^	unsigned int size;$/;"	m	struct:bit_map_t	file:
str_free	misc.c	/^char *str_free(char *str)$/;"	f
str_prefix	misc.c	/^int str_prefix(char *str, char *prefix)$/;"	f
str_printf	misc.c	/^void str_printf(char **pbuf, int *psize, char *fmt, ...)$/;"	f
str_read_from_file	misc.c	/^void str_read_from_file(FILE *f, char *buf, int buf_size)$/;"	f
str_set	misc.c	/^char *str_set(char *old_str, char *new_str)$/;"	f
str_single_spaces	misc.c	/^void str_single_spaces(char *dest, char *src, int size)$/;"	f
str_substr	misc.c	/^void str_substr(char *dest, int dest_size, char *src, int src_pos, int src_count)$/;"	f
str_suffix	misc.c	/^int str_suffix(char *str, char *suffix)$/;"	f
str_to_int	misc.c	/^int str_to_int(char *str)$/;"	f
str_token	misc.c	/^void str_token(char *dest, int dest_size, char *src, int index, char *delim)$/;"	f
str_token_list_create	misc.c	/^struct list_t *str_token_list_create(char *str, char *delim)$/;"	f
str_token_list_dump	misc.c	/^void str_token_list_dump(struct list_t *token_list, FILE *f)$/;"	f
str_token_list_first	misc.c	/^char *str_token_list_first(struct list_t *token_list)$/;"	f
str_token_list_free	misc.c	/^void str_token_list_free(struct list_t *token_list)$/;"	f
str_token_list_shift	misc.c	/^void str_token_list_shift(struct list_t *token_list)$/;"	f
str_write_to_file	misc.c	/^void str_write_to_file(FILE *f, char *buf)$/;"	f
strccat	misc.c	/^void strccat(char *dest, char *src)$/;"	f
strccpy	misc.c	/^void strccpy(char *dest, char *src, int size)$/;"	f
strdump	misc.c	/^void strdump(char *dest, char *src, int size)$/;"	f
string	misc.h	/^		char *string;$/;"	m	struct:string_map_t::__anon1
string_map_t	misc.h	/^struct string_map_t$/;"	s
unknown	misc.c	/^static char *unknown = "<unknown>";$/;"	v	file:
value	misc.h	/^		int value;$/;"	m	struct:string_map_t::__anon1
word_count	misc.c	/^	unsigned int word_count;  \/* Size in words *\/$/;"	m	struct:bit_map_t	file:
write_buffer	misc.c	/^int write_buffer(char *file_name, void *buf, int size)$/;"	f
