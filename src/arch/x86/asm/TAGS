
x86-asm.h,4114
#define X86_ASM_HX86_ASM_H21,822
enum x86_opcode_tx86_opcode_t29,925
	x86_op_none = 0,x86_op_none31,945
#define DEFINST(DEFINST33,964
#undef DEFINSTDEFINST35,1051
	x86_opcode_countx86_opcode_count37,1067
enum x86_prefix_tx86_prefix_t42,1105
	x86_prefix_none = 0x00,x86_prefix_none44,1125
	x86_prefix_rep = 0x01,x86_prefix_rep45,1150
	x86_prefix_repz = 0x01,  /* same value as rep */x86_prefix_repz46,1174
	x86_prefix_repnz = 0x02,x86_prefix_repnz47,1224
	x86_prefix_lock = 0x04,x86_prefix_lock48,1250
	x86_prefix_addr = 0x08,  /* address-size override */x86_prefix_addr49,1275
	x86_prefix_op = 0x10  /* operand-size override */x86_prefix_op50,1329
enum x86_reg_tx86_reg_t55,1423
	x86_reg_none = 0,x86_reg_none57,1440
	x86_reg_eax,x86_reg_eax59,1460
	x86_reg_ecx,x86_reg_ecx60,1474
	x86_reg_edx,x86_reg_edx61,1488
	x86_reg_ebx,x86_reg_ebx62,1502
	x86_reg_esp,x86_reg_esp63,1516
	x86_reg_ebp,x86_reg_ebp64,1530
	x86_reg_esi,x86_reg_esi65,1544
	x86_reg_edi,x86_reg_edi66,1558
	x86_reg_ax,x86_reg_ax68,1573
	x86_reg_cx,x86_reg_cx69,1586
	x86_reg_dx,x86_reg_dx70,1599
	x86_reg_bx,x86_reg_bx71,1612
	x86_reg_sp,x86_reg_sp72,1625
	x86_reg_bp,x86_reg_bp73,1638
	x86_reg_si,x86_reg_si74,1651
	x86_reg_di,x86_reg_di75,1664
	x86_reg_al,x86_reg_al77,1678
	x86_reg_cl,x86_reg_cl78,1691
	x86_reg_dl,x86_reg_dl79,1704
	x86_reg_bl,x86_reg_bl80,1717
	x86_reg_ah,x86_reg_ah81,1730
	x86_reg_ch,x86_reg_ch82,1743
	x86_reg_dh,x86_reg_dh83,1756
	x86_reg_bh,x86_reg_bh84,1769
	x86_reg_es,x86_reg_es86,1783
	x86_reg_cs,x86_reg_cs87,1796
	x86_reg_ss,x86_reg_ss88,1809
	x86_reg_ds,x86_reg_ds89,1822
	x86_reg_fs,x86_reg_fs90,1835
	x86_reg_gs,x86_reg_gs91,1848
	x86_reg_countx86_reg_count93,1862
enum x86_flag_tx86_flag_t100,1946
	x86_flag_cf = 0,x86_flag_cf102,1964
	x86_flag_pf = 2,x86_flag_pf103,1982
	x86_flag_af = 4,x86_flag_af104,2000
	x86_flag_zf = 6,x86_flag_zf105,2018
	x86_flag_sf = 7,x86_flag_sf106,2036
	x86_flag_df = 10,x86_flag_df107,2054
	x86_flag_of = 11x86_flag_of108,2073
union x86_xmm_reg_tx86_xmm_reg_t112,2114
	unsigned char as_uchar[16];as_uchar114,2136
	signed char as_char[16];as_char115,2165
	unsigned int as_uint[4];as_uint117,2192
	signed int as_int[4];as_int118,2218
	unsigned long long as_uint64[2];as_uint64120,2242
	signed long long as_int64[2];as_int64121,2276
	float as_float[4];as_float123,2308
	double as_double[2];as_double124,2328
struct x86_inst_tx86_inst_t129,2377
	uint32_t eip;  /* position inside the code */eip131,2397
	int size;  /* number of instruction bytes */size132,2444
	enum x86_opcode_t opcode;opcode133,2490
	char *format;  /* format of the instruction */format134,2517
	int prefix_size;prefix_size137,2589
	int opcode_size;opcode_size138,2607
	int modrm_size;modrm_size139,2625
	int sib_size;sib_size140,2642
	int disp_size;disp_size141,2657
	int imm_size;imm_size142,2673
	int opindex;opindex146,2807
	enum x86_reg_t segment;  /* Reg. used to override segment */segment149,2838
	int prefixes;  /* Mask of prefixes of type 'enum x86_prefix_t' */prefixes150,2900
	int op_size;  /* Operand size: 2 or 4, default 4 */op_size151,2967
	int addr_size;  /* Address size: 2 or 4, default 4 */addr_size152,3020
	unsigned char modrm;  /* ModR/M field */modrm155,3097
	unsigned char modrm_mod;  /* mod field of ModR/M */modrm_mod156,3139
	unsigned char modrm_reg;  /* reg field of ModR/M */modrm_reg157,3192
	unsigned char modrm_rm;  /* rm field of ModR/M */modrm_rm158,3245
	unsigned char sib;  /* SIB field */sib161,3314
	unsigned char sib_scale;  /* Scale field of SIB */sib_scale162,3351
	unsigned char sib_index;  /* Index field of SIB */sib_index163,3403
	unsigned char sib_base;  /* Base field of SIB */sib_base164,3455
	int32_t disp;disp167,3540
		uint8_t b;b169,3564
		uint16_t w;w170,3577
		uint32_t d;d171,3591
	} imm;imm172,3605
	enum x86_reg_t ea_base;ea_base175,3639
	enum x86_reg_t ea_index;ea_index176,3664
	uint32_t ea_scale;ea_scale177,3690
	int reg;  /* same as modrm_reg */reg180,3727

asm.c,3595
#define SKIP SKIP30,953
#define REG REG31,1006
#define MEM MEM32,1044
#define INDEX INDEX33,1082
#define IB IB34,1123
#define IW IW35,1159
#define ID ID36,1195
struct x86_opcode_info_tx86_opcode_info_t42,1436
	enum x86_opcode_t opcode;opcode45,1492
	uint32_t op1, op2, op3, modrm, imm;op146,1519
	uint32_t op1, op2, op3, modrm, imm;op246,1519
	uint32_t op1, op2, op3, modrm, imm;op346,1519
	uint32_t op1, op2, op3, modrm, imm;modrm46,1519
	uint32_t op1, op2, op3, modrm, imm;imm46,1519
	int prefixes;  /* Mask of prefixes of type 'enum x86_prefix_enum' */prefixes47,1556
	char *fmt;fmt48,1626
	uint32_t match_mask, match_result;match_mask51,1661
	uint32_t match_mask, match_result;match_result51,1661
	uint32_t nomatch_mask, nomatch_result;nomatch_mask52,1697
	uint32_t nomatch_mask, nomatch_result;nomatch_result52,1697
	int opindex_shift;  /* pos to shift inst to obtain index of op1/op2 if any */opindex_shift53,1737
	int impl_reg;  /* implied register in op1 (0-7) */impl_reg54,1816
	int opcode_size;  /* size of opcode (1 or 2), not counting the modrm part. */opcode_size55,1868
	int modrm_size;  /* size of modrm field (0 or 1) */modrm_size56,1947
	int imm_size;  /* Immediate size (0, 1, 2, or 4) */imm_size57,2000
struct x86_opcode_info_elem_tx86_opcode_info_elem_t63,2205
	struct x86_opcode_info_t *info;info65,2237
	struct x86_opcode_info_elem_t *next;next66,2270
static struct x86_opcode_info_elem_t *x86_opcode_info_table[0x100];x86_opcode_info_table73,2524
static struct x86_opcode_info_elem_t *x86_opcode_info_table_0f[0x100];x86_opcode_info_table_0f74,2592
static unsigned char x86_prefixes[] = { 0xf0, 0xf2, 0xf3, 0x66, 0x67, 0x2e, 0x36, 0x3e, 0x26, 0x64, 0x65 };x86_prefixes77,2696
static unsigned char x86_byte_is_prefix[256];x86_byte_is_prefix78,2804
#define DEFINST(DEFINST86,3022
#undef DEFINSTDEFINST89,3177
static struct x86_opcode_info_t x86_opcode_info_list[x86_opcode_count] =x86_opcode_info_list82,2880
char *x86_reg_name[x86_reg_count] =x86_reg_name95,3219
struct x86_modrm_table_entry_t {x86_modrm_table_entry_t138,3631
	enum x86_reg_t ea_base;ea_base139,3664
	int disp_size;disp_size140,3689
	int sib_size;sib_size141,3705
static struct x86_modrm_table_entry_t modrm_table[32] =modrm_table145,3725
uint32_t ea_scale_table[4] = { 1, 2, 4, 8};ea_scale_table187,4564
static void x86_opcode_info_insert_at(struct x86_opcode_info_elem_t **table,x86_opcode_info_insert_at190,4610
static void x86_opcode_info_insert(struct x86_opcode_info_t *info)x86_opcode_info_insert209,4963
static void x86_opcode_info_elem_free_list(struct x86_opcode_info_elem_t *elem)x86_opcode_info_elem_free_list236,5686
static char *x86_reg_name_get(enum x86_reg_t reg)x86_reg_name_get247,5879
static int is_fmt_char(char c)is_fmt_char256,6030
static int is_next_word(char *src, char *word)is_next_word264,6155
static void x86_moffs_address_dump_buf(struct x86_inst_t *inst, char **pbuf, int *psize)x86_moffs_address_dump_buf277,6362
static void x86_memory_address_dump_buf(struct x86_inst_t *inst, char **pbuf, int *psize)x86_memory_address_dump_buf286,6603
void x86_disasm_init()x86_disasm_init336,7718
void x86_disasm_done()x86_disasm_done437,10195
void x86_disasm(void *buf, uint32_t eip, volatile struct x86_inst_t *inst)x86_disasm449,10480
void x86_inst_dump_buf(struct x86_inst_t *inst, char *buf, int size)x86_inst_dump_buf632,14561
void x86_inst_dump(struct x86_inst_t *inst, FILE *f)x86_inst_dump800,20233
char *x86_inst_name(enum x86_opcode_t opcode)x86_inst_name808,20376
